/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package github.com/apache/arrow-adbc/go/adbc/pkg/snowflake */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 27 "driver.go"


 #include "../../drivermgr/arrow-adbc/adbc.h"
 #include "utils.h"
 #include <errno.h>
 #include <stdint.h>
 #include <string.h>

 typedef const char cchar_t;
 typedef const uint8_t cuint8_t;
 typedef const uint32_t cuint32_t;
 typedef const struct AdbcError ConstAdbcError;

 int SnowflakeArrayStreamGetSchema(struct ArrowArrayStream*, struct ArrowSchema*);
 int SnowflakeArrayStreamGetNext(struct ArrowArrayStream*, struct ArrowArray*);
 const char* SnowflakeArrayStreamGetLastError(struct ArrowArrayStream*);
 void SnowflakeArrayStreamRelease(struct ArrowArrayStream*);

 int SnowflakeArrayStreamGetSchemaTrampoline(struct ArrowArrayStream*, struct ArrowSchema*);
 int SnowflakeArrayStreamGetNextTrampoline(struct ArrowArrayStream*, struct ArrowArray*);

 void releasePartitions(struct AdbcPartitions* partitions);


#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern __declspec(dllexport) cchar_t* SnowflakeArrayStreamGetLastError(struct ArrowArrayStream* stream);
extern __declspec(dllexport) int SnowflakeArrayStreamGetNext(struct ArrowArrayStream* stream, struct ArrowArray* array);
extern __declspec(dllexport) int SnowflakeArrayStreamGetSchema(struct ArrowArrayStream* stream, struct ArrowSchema* schema);
extern __declspec(dllexport) void SnowflakeArrayStreamRelease(struct ArrowArrayStream* stream);
extern __declspec(dllexport) struct AdbcError* SnowflakeErrorFromArrayStream(struct ArrowArrayStream* stream, AdbcStatusCode* status);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseGetOption(struct AdbcDatabase* db, cchar_t* key, char* value, size_t* length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseGetOptionBytes(struct AdbcDatabase* db, cchar_t* key, uint8_t* value, size_t* length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseGetOptionDouble(struct AdbcDatabase* db, cchar_t* key, double* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseGetOptionInt(struct AdbcDatabase* db, cchar_t* key, int64_t* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseInit(struct AdbcDatabase* db, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseNew(struct AdbcDatabase* db, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseRelease(struct AdbcDatabase* db, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseSetOption(struct AdbcDatabase* db, cchar_t* key, cchar_t* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseSetOptionBytes(struct AdbcDatabase* db, cchar_t* key, cuint8_t* value, size_t length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseSetOptionDouble(struct AdbcDatabase* db, cchar_t* key, double value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDatabaseSetOptionInt(struct AdbcDatabase* db, cchar_t* key, int64_t value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetOption(struct AdbcConnection* db, cchar_t* key, char* value, size_t* length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetOptionBytes(struct AdbcConnection* db, cchar_t* key, uint8_t* value, size_t* length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetOptionDouble(struct AdbcConnection* db, cchar_t* key, double* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetOptionInt(struct AdbcConnection* db, cchar_t* key, int64_t* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionNew(struct AdbcConnection* cnxn, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionSetOption(struct AdbcConnection* cnxn, cchar_t* key, cchar_t* val, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionSetOptionBytes(struct AdbcConnection* db, cchar_t* key, cuint8_t* value, size_t length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionSetOptionDouble(struct AdbcConnection* db, cchar_t* key, double value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionSetOptionInt(struct AdbcConnection* db, cchar_t* key, int64_t value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionInit(struct AdbcConnection* cnxn, struct AdbcDatabase* db, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionRelease(struct AdbcConnection* cnxn, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionCancel(struct AdbcConnection* cnxn, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetInfo(struct AdbcConnection* cnxn, cuint32_t* codes, size_t len, struct ArrowArrayStream* out, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetObjects(struct AdbcConnection* cnxn, int depth, cchar_t* catalog, cchar_t* dbSchema, cchar_t* tableName, cchar_t** tableType, cchar_t* columnName, struct ArrowArrayStream* out, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetStatistics(struct AdbcConnection* cnxn, cchar_t* catalog, cchar_t* dbSchema, cchar_t* tableName, char approximate, struct ArrowArrayStream* out, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetStatisticNames(struct AdbcConnection* cnxn, struct ArrowArrayStream* out, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetTableSchema(struct AdbcConnection* cnxn, cchar_t* catalog, cchar_t* dbSchema, cchar_t* tableName, struct ArrowSchema* schema, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionGetTableTypes(struct AdbcConnection* cnxn, struct ArrowArrayStream* out, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionReadPartition(struct AdbcConnection* cnxn, cuint8_t* serialized, size_t serializedLen, struct ArrowArrayStream* out, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionCommit(struct AdbcConnection* cnxn, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeConnectionRollback(struct AdbcConnection* cnxn, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementGetOption(struct AdbcStatement* db, cchar_t* key, char* value, size_t* length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementGetOptionBytes(struct AdbcStatement* db, cchar_t* key, uint8_t* value, size_t* length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementGetOptionDouble(struct AdbcStatement* db, cchar_t* key, double* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementGetOptionInt(struct AdbcStatement* db, cchar_t* key, int64_t* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementNew(struct AdbcConnection* cnxn, struct AdbcStatement* stmt, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementRelease(struct AdbcStatement* stmt, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementCancel(struct AdbcStatement* stmt, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementPrepare(struct AdbcStatement* stmt, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementExecuteQuery(struct AdbcStatement* stmt, struct ArrowArrayStream* out, int64_t* affected, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementExecuteSchema(struct AdbcStatement* stmt, struct ArrowSchema* schema, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementSetSqlQuery(struct AdbcStatement* stmt, cchar_t* query, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementSetSubstraitPlan(struct AdbcStatement* stmt, cuint8_t* plan, size_t length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementBind(struct AdbcStatement* stmt, struct ArrowArray* values, struct ArrowSchema* schema, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementBindStream(struct AdbcStatement* stmt, struct ArrowArrayStream* stream, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementGetParameterSchema(struct AdbcStatement* stmt, struct ArrowSchema* schema, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementSetOption(struct AdbcStatement* stmt, cchar_t* key, cchar_t* value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementSetOptionBytes(struct AdbcStatement* db, cchar_t* key, cuint8_t* value, size_t length, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementSetOptionDouble(struct AdbcStatement* db, cchar_t* key, double value, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementSetOptionInt(struct AdbcStatement* db, cchar_t* key, int64_t value, struct AdbcError* err);
extern __declspec(dllexport) void releasePartitions(struct AdbcPartitions* partitions);
extern __declspec(dllexport) AdbcStatusCode SnowflakeStatementExecutePartitions(struct AdbcStatement* stmt, struct ArrowSchema* schema, struct AdbcPartitions* partitions, int64_t* affected, struct AdbcError* err);
extern __declspec(dllexport) AdbcStatusCode SnowflakeDriverInit(int version, void* rawDriver, struct AdbcError* err);

#ifdef __cplusplus
}
#endif
