# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Rust

on:
  pull_request:
    branches:
      - main
    paths:
      - "adbc.h"
      - "rust/**"
      - ".github/workflows/rust.yml"
  push:
    paths:
      - "adbc.h"
      - "rust/**"
      - ".github/workflows/rust.yml"

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    shell: bash
    working-directory: rust

jobs:
  rust:
    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest
            features: "--all-features"
          - os: ubuntu-latest
            features: "--all-features"
    name: "Rust ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Update Rust to latest stable
        run: rustup update stable
      - name: Set default Rust toolchain
        run: rustup default stable
      - name: Rust version
        id: rustc
        run: echo "version=$(rustup run stable rustc --version | base64)" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rustc.outputs.version }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ steps.rustc.outputs.version }}-
      - name: Check format
        if: matrix.os == 'ubuntu-latest'
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --workspace --all-targets ${{ matrix.features }} -- -Dwarnings
      - name: Test
        run: cargo test --workspace --all-targets ${{ matrix.features }}
      - name: Documentation tests
        run: cargo test --workspace --doc ${{ matrix.features }}
      - name: Rustdoc
        run: cargo doc --workspace ${{ matrix.features }}
      - name: Check bindings
        if: matrix.os == 'ubuntu-latest'
        run: |
          git diff --exit-code || ( echo ":x: rust/bindings/adbc.rs are outdated, please regenerate" >> $GITHUB_STEP_SUMMARY && exit 1 )
