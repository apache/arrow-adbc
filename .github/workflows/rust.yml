# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Rust

on:
  pull_request:
    branches:
      - main
    paths:
      - "rust/**"
      - ".github/workflows/rust.yml"
  push:
    paths:
      - "rust/**"
      - ".github/workflows/rust.yml"

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}-rust
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    shell: bash
    working-directory: rust

jobs:
  native-unix:
    uses: ./.github/workflows/native-unix.yml

  rust:
    needs: [native-unix]
    strategy:
      matrix:
        # TODO(alexandreyc): add `windows-latest`
        # See: https://github.com/apache/arrow-adbc/pull/1803#issuecomment-2117669300
        os: [macos-13, macos-latest, ubuntu-latest]
    name: "Rust ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    env:
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: "-Adead_code" # TODO(alexandreyc): remove this line when implementation is complete
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Use stable Rust
        id: rust
        run: |
          rustup toolchain install stable --no-self-update
          rustup default stable
      - uses: actions/download-artifact@v4
        with:
          name: driver-manager-${{ matrix.os }}
          path: ${{ github.workspace }}/build
      - name: Set dynamic linker path
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "LD_LIBRARY_PATH=${{ github.workspace }}/build/lib:$LD_LIBRARY_PATH" >> "$GITHUB_ENV"
      - name: Set dynamic linker path
        if: matrix.os == 'macos-latest'
        run: |
          echo "DYLD_LIBRARY_PATH=/opt/homebrew/opt/sqlite/lib:${{ github.workspace }}/build/lib:$DYLD_LIBRARY_PATH" >> "$GITHUB_ENV"
      - name: Set dynamic linker path
        if: matrix.os == 'macos-13'
        run: |
          echo "DYLD_LIBRARY_PATH=/usr/local/opt/sqlite/lib:${{ github.workspace }}/build/lib:$DYLD_LIBRARY_PATH" >> "$GITHUB_ENV"
      - name: Clippy
        run: cargo clippy --workspace --all-targets --all-features -- -Dwarnings
      - name: Test
        run: cargo test --workspace --all-targets --all-features
      - name: Doctests
        run: cargo test --workspace --doc --all-features
      - name: Check docs
        run: cargo doc --workspace --all-features
