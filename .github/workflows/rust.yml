# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Rust

on:
  pull_request:
    branches:
      - main
    paths:
      - "rust/**"
      - ".github/workflows/rust.yml"
  push:
    paths:
      - "rust/**"
      - ".github/workflows/rust.yml"

concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    working-directory: rust

jobs:
  rust:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    name: "Rust ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: Check format
        run: cargo fmt -- --check
      - name: Clippy
        run: cargo clippy --tests
      - name: Build Driver SQLite (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: .
        shell: pwsh
        env:
          BUILD_ALL: "0"
          BUILD_DRIVER_SQLITE: "1"
          ADBC_BUILD_TESTS: OFF
        run: |
          vcpkg --triplet x64-windows install sqlite3
          $env:CMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
          .\ci\scripts\cpp_build.ps1 $pwd $pwd\build $pwd\rust\build
          "$pwd\rust\build\bin" >> $env:GITHUB_PATH
      - name: Build Driver SQLite (Unix)
        if: matrix.os != 'windows-latest'
        working-directory: .
        shell: bash -l {0}
        env:
          BUILD_ALL: "0"
          BUILD_DRIVER_SQLITE: "1"
        run: |
           ./ci/scripts/cpp_build.sh "$(pwd)" "$(pwd)/build" "$(pwd)/rust/build"
           echo "LD_LIBRARY_PATH=$(pwd)/rust/build/lib" >> $GITHUB_ENV
      - name: Test
        shell: bash -l {0}
        run: |
          # MacOS library path needs to be set within action, since it is cleared
          # when new processes are created.
          export DYLD_LIBRARY_PATH=$(pwd)/build/lib
          cargo test
      - name: Check docs
        run: cargo doc
  miri:
    # Miri is an interpreter for Rust that is used to detect undefined behavior
    # in tests. However, it can only be run on tests that are entirely in Rust,
    # so not on any integration tests with other languages.
    name: "Rust Tests on Miri"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0
            persist-credentials: false
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: miri
      - uses: Swatinem/rust-cache@v2
      - name: Test
        run: cargo miri test --test test_implement
