/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.17.0)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE0017  // object init can be simplified
#pragma warning disable IDE0028  // collection init can be simplified
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable CA1822   // empty DeepCopy() methods still non-static
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

namespace Apache.Hive.Service.Rpc.Thrift
{
  public static class TCLIService2Extensions
  {
    public static bool Equals(this Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TDBSqlConfValue> instance, object that)
    {
      if (!(that is Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TDBSqlConfValue> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TDBSqlConfValue> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TDBSqlConfValue> DeepCopy(this Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TDBSqlConfValue> source)
    {
      if (source == null)
        return null;

      var tmp1130 = new Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TDBSqlConfValue>(source.Count);
      foreach (var pair in source)
        tmp1130.Add((pair.Key != null) ? pair.Key : null, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1130;
    }


    public static bool Equals(this Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TTypeQualifierValue> instance, object that)
    {
      if (!(that is Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TTypeQualifierValue> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TTypeQualifierValue> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TTypeQualifierValue> DeepCopy(this Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TTypeQualifierValue> source)
    {
      if (source == null)
        return null;

      var tmp1131 = new Dictionary<string, global::Apache.Hive.Service.Rpc.Thrift.TTypeQualifierValue>(source.Count);
      foreach (var pair in source)
        tmp1131.Add((pair.Key != null) ? pair.Key : null, (pair.Value != null) ? pair.Value.DeepCopy() : null);
      return tmp1131;
    }


    public static bool Equals(this Dictionary<string, int> instance, object that)
    {
      if (!(that is Dictionary<string, int> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<string, int> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<string, int> DeepCopy(this Dictionary<string, int> source)
    {
      if (source == null)
        return null;

      var tmp1132 = new Dictionary<string, int>(source.Count);
      foreach (var pair in source)
        tmp1132.Add((pair.Key != null) ? pair.Key : null, pair.Value);
      return tmp1132;
    }


    public static bool Equals(this Dictionary<string, string> instance, object that)
    {
      if (!(that is Dictionary<string, string> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this Dictionary<string, string> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static Dictionary<string, string> DeepCopy(this Dictionary<string, string> source)
    {
      if (source == null)
        return null;

      var tmp1133 = new Dictionary<string, string>(source.Count);
      foreach (var pair in source)
        tmp1133.Add((pair.Key != null) ? pair.Key : null, (pair.Value != null) ? pair.Value : null);
      return tmp1133;
    }


    public static bool Equals(this List<List<string>> instance, object that)
    {
      if (!(that is List<List<string>> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<List<string>> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<List<string>> DeepCopy(this List<List<string>> source)
    {
      if (source == null)
        return null;

      var tmp1134 = new List<List<string>>(source.Count);
      foreach (var elem in source)
        tmp1134.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1134;
    }


    public static bool Equals(this List<bool> instance, object that)
    {
      if (!(that is List<bool> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<bool> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<bool> DeepCopy(this List<bool> source)
    {
      if (source == null)
        return null;

      var tmp1135 = new List<bool>(source.Count);
      foreach (var elem in source)
        tmp1135.Add(elem);
      return tmp1135;
    }


    public static bool Equals(this List<byte[]> instance, object that)
    {
      if (!(that is List<byte[]> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<byte[]> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<byte[]> DeepCopy(this List<byte[]> source)
    {
      if (source == null)
        return null;

      var tmp1136 = new List<byte[]>(source.Count);
      foreach (var elem in source)
        tmp1136.Add((elem != null) ? elem.ToArray() : null);
      return tmp1136;
    }


    public static bool Equals(this List<double> instance, object that)
    {
      if (!(that is List<double> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<double> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<double> DeepCopy(this List<double> source)
    {
      if (source == null)
        return null;

      var tmp1137 = new List<double>(source.Count);
      foreach (var elem in source)
        tmp1137.Add(elem);
      return tmp1137;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumn> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TColumn> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumn> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TColumn> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumn> source)
    {
      if (source == null)
        return null;

      var tmp1138 = new List<global::Apache.Hive.Service.Rpc.Thrift.TColumn>(source.Count);
      foreach (var elem in source)
        tmp1138.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1138;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumnDesc> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TColumnDesc> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumnDesc> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TColumnDesc> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumnDesc> source)
    {
      if (source == null)
        return null;

      var tmp1139 = new List<global::Apache.Hive.Service.Rpc.Thrift.TColumnDesc>(source.Count);
      foreach (var elem in source)
        tmp1139.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1139;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumnValue> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TColumnValue> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumnValue> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TColumnValue> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TColumnValue> source)
    {
      if (source == null)
        return null;

      var tmp1140 = new List<global::Apache.Hive.Service.Rpc.Thrift.TColumnValue>(source.Count);
      foreach (var elem in source)
        tmp1140.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1140;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlCloudResultFile> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlCloudResultFile> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlCloudResultFile> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlCloudResultFile> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlCloudResultFile> source)
    {
      if (source == null)
        return null;

      var tmp1141 = new List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlCloudResultFile>(source.Count);
      foreach (var elem in source)
        tmp1141.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1141;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlTempView> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlTempView> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlTempView> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlTempView> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlTempView> source)
    {
      if (source == null)
        return null;

      var tmp1142 = new List<global::Apache.Hive.Service.Rpc.Thrift.TDBSqlTempView>(source.Count);
      foreach (var elem in source)
        tmp1142.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1142;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TExpressionInfo> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TExpressionInfo> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TExpressionInfo> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TExpressionInfo> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TExpressionInfo> source)
    {
      if (source == null)
        return null;

      var tmp1143 = new List<global::Apache.Hive.Service.Rpc.Thrift.TExpressionInfo>(source.Count);
      foreach (var elem in source)
        tmp1143.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1143;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TRow> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TRow> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TRow> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TRow> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TRow> source)
    {
      if (source == null)
        return null;

      var tmp1144 = new List<global::Apache.Hive.Service.Rpc.Thrift.TRow>(source.Count);
      foreach (var elem in source)
        tmp1144.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1144;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowBatch> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowBatch> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowBatch> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowBatch> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowBatch> source)
    {
      if (source == null)
        return null;

      var tmp1145 = new List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowBatch>(source.Count);
      foreach (var elem in source)
        tmp1145.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1145;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowResultLink> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowResultLink> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowResultLink> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowResultLink> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowResultLink> source)
    {
      if (source == null)
        return null;

      var tmp1146 = new List<global::Apache.Hive.Service.Rpc.Thrift.TSparkArrowResultLink>(source.Count);
      foreach (var elem in source)
        tmp1146.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1146;
    }


    public static bool Equals(this List<global::Apache.Hive.Service.Rpc.Thrift.TTypeEntry> instance, object that)
    {
      if (!(that is List<global::Apache.Hive.Service.Rpc.Thrift.TTypeEntry> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Apache.Hive.Service.Rpc.Thrift.TTypeEntry> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Apache.Hive.Service.Rpc.Thrift.TTypeEntry> DeepCopy(this List<global::Apache.Hive.Service.Rpc.Thrift.TTypeEntry> source)
    {
      if (source == null)
        return null;

      var tmp1147 = new List<global::Apache.Hive.Service.Rpc.Thrift.TTypeEntry>(source.Count);
      foreach (var elem in source)
        tmp1147.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp1147;
    }


    public static bool Equals(this List<int> instance, object that)
    {
      if (!(that is List<int> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<int> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<int> DeepCopy(this List<int> source)
    {
      if (source == null)
        return null;

      var tmp1148 = new List<int>(source.Count);
      foreach (var elem in source)
        tmp1148.Add(elem);
      return tmp1148;
    }


    public static bool Equals(this List<long> instance, object that)
    {
      if (!(that is List<long> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<long> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<long> DeepCopy(this List<long> source)
    {
      if (source == null)
        return null;

      var tmp1149 = new List<long>(source.Count);
      foreach (var elem in source)
        tmp1149.Add(elem);
      return tmp1149;
    }


    public static bool Equals(this List<sbyte> instance, object that)
    {
      if (!(that is List<sbyte> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<sbyte> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<sbyte> DeepCopy(this List<sbyte> source)
    {
      if (source == null)
        return null;

      var tmp1150 = new List<sbyte>(source.Count);
      foreach (var elem in source)
        tmp1150.Add(elem);
      return tmp1150;
    }


    public static bool Equals(this List<short> instance, object that)
    {
      if (!(that is List<short> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<short> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<short> DeepCopy(this List<short> source)
    {
      if (source == null)
        return null;

      var tmp1151 = new List<short>(source.Count);
      foreach (var elem in source)
        tmp1151.Add(elem);
      return tmp1151;
    }


    public static bool Equals(this List<string> instance, object that)
    {
      if (!(that is List<string> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<string> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<string> DeepCopy(this List<string> source)
    {
      if (source == null)
        return null;

      var tmp1152 = new List<string>(source.Count);
      foreach (var elem in source)
        tmp1152.Add((elem != null) ? elem : null);
      return tmp1152;
    }


  }
}
