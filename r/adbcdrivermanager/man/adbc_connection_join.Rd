% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{adbc_connection_join}
\alias{adbc_connection_join}
\alias{adbc_statement_join}
\alias{adbc_stream_join}
\title{Join the lifecycle of a unique parent to its child}
\usage{
adbc_connection_join(connection, database)

adbc_statement_join(statement, connection)

adbc_stream_join(stream, x)
}
\arguments{
\item{connection}{A connection created with \code{\link[=adbc_connection_init]{adbc_connection_init()}}}

\item{database}{A database created with \code{\link[=adbc_database_init]{adbc_database_init()}}}

\item{statement}{A statement created with \code{\link[=adbc_statement_init]{adbc_statement_init()}}}

\item{stream}{A \link[nanoarrow:as_nanoarrow_array_stream]{nanoarrow_array_stream}}

\item{x}{An ADBC database, ADBC connection, ADBC statement, or
nanoarrow_array_stream returned from calls to an ADBC function.}
}
\value{
The input, invisibly.
}
\description{
It is occasionally useful to return a connection, statement, or stream
from a function that was created from a unique parent. These helpers
tie the lifecycle of a unique parent object to its child such that the
parent object is released predictably and immediately after the child.
These functions will invalidate all references to the previous R object.
}
\examples{
read_monkey <- function(obj) {
  db <- local_adbc(adbc_database_init(adbc_driver_monkey()))
  con <- local_adbc(adbc_connection_init(db))
  stmt <- local_adbc(adbc_statement_init(con, obj))
  adbc_connection_join(con, db)
  adbc_statement_join(stmt, con)

  stream <- nanoarrow::nanoarrow_allocate_array_stream()
  adbc_statement_execute_query(stmt, stream)
  adbc_stream_join(stream, stmt)
}

with_adbc(stream <- read_monkey(data.frame(x = 1:5)), {
  as.data.frame(stream)
})

}
